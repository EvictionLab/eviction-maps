
@import '../../../theme';

// Card Typography Mixins
// ----
// Default style for card headings
@mixin cardHeading($size) {
  @include altFont($size);
  letter-spacing: 0.37px;  
  line-height: 1.16666;
  text-transform: uppercase;
}
// Overrides for heading in data panel
@mixin panelCardHeading($size) {
  @include altFont($size);
  letter-spacing: 0.5px;  
  line-height: 1.16666;
  text-transform: uppercase;
}

// Base Card Styles
// ----
.location-card {
  pointer-events: all;
  background: $cardBg;
  box-shadow: $z1shadow;
  position:relative;
  width: 100%;
  z-index: 20;
  &:nth-child(2) { z-index: 19; }
  &:nth-child(3) { z-index: 18; }
  &:nth-child(4) { z-index: 17; }
  .card-header {
    .marker { display: none; } // hide marker by default
    position:relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-end;
    padding: $defaultPadding;
    color: $cardHeaderBg1;
    border-bottom: $cardBarHeight solid transparent;
    height: $cardHeaderHeight;
    padding-right: grid(6);
    &.clickable { cursor: pointer; }
    &.clickable:hover { 
      background: $cardHoverBg; 
    }
    &:after {
      content: "";
      position: absolute;
      bottom:-1*$cardBarHeight;
      left:0;
      height: $cardBarHeight;
      width:100%;
    }
  }
  .card-heading { 
    width: 100%;
    margin: 0; 
    @include cardHeading(16px);
  }
  .card-subheading {
    margin: grid(0.5) 0 0 0;     
    @include smallCapsText(12px);
  }
  .card-dismiss { 
    position:absolute;
    top: 0px;
    right: 0px;
    color: $cardLabelText;
    &:hover { color: $color1; }
  }

  // set colors for cards
  &:nth-child(1) .card-header {
    border-bottom-color: $cardHeaderBg1;
    .marker { fill: $cardHeaderBg1; }
    &:after { background: $gradient1; }
  }
  &:nth-child(2) .card-header { 
    border-bottom-color: $cardHeaderBg2; 
    .card-heading, .card-subheading { color: $cardHeaderBg2; }
    .marker  { fill: $cardHeaderBg2; }
    &:after { background: $gradient2; }
  }
  &:nth-child(3) .card-header { 
    border-bottom-color: $cardHeaderBg3; 
    .card-heading, .card-subheading { color: $cardHeaderBg3; }
    .marker  { fill: $cardHeaderBg3; }
    &:after { background: $gradient3; }
  }
  &:nth-child(4) .card-header { 
    border-bottom-color: $cardHeaderBg4; 
    .card-heading, .card-subheading { color: $cardHeaderBg4; }
    .marker  { fill: $cardHeaderBg4; }
    &:after { background: $gradient4; }
  }
  .card-content {
    padding: $defaultPadding;
    .card-stats { 
      margin:0; 
      padding:0; 
      list-style:none; 
    }
    .card-stats li { margin-bottom: grid(1); }
    .card-stats li:last-child { margin-bottom: 0;}
    // attribute labels
    .card-stat-label {
      display:block;       
      color: $cardLabelText;
      font-size: 12px;
      position:relative;
      .attribute-hint {
        display:block;
        position:absolute;
        width:100%;
        height:100%;
        left:0;top:0;
        ::ng-deep {
          .hint-button {
            width:100%;
            text-align:right;
            .icon {
              width:grid(2);
              height:grid(2);
              display:inline-block;
              fill: $grey2;
            }
          }
        }
      }
    }
    // add space for hint icon on labels with hints
    .card-stats li.has-hint .card-stat-label { padding-right: grid(3);}
    // attribute values
    .card-stat-value {
      @include numberFont(14px);
      color: $cardValueText;
      &.unavailable {
        @include defaultFont(14px);
        color: $black;
      }
    }
  }
}

// default mobile styles for map cards
:host-context(.map-ui-wrapper) {
  box-shadow: $z1shadow;
  // location cards fill most of the viewport width
  .location-card {
    min-width: 75vw;
    // align location text at top of card header
    .card-header {
      justify-content: flex-start;
    }
    // overlay the card content at the bottom of the header
    .card-content { 
      position:absolute;
      bottom:0;
      left:0;
      width:100%;
      padding: grid(1) 0 grid(1) grid(2);
      li { 
        float:left; 
        padding-right: grid(2); 
        max-width: 50%;
        span {
          display:block;
          width:100%;
          white-space: nowrap;
          overflow:hidden; 
          text-overflow: ellipsis;
        }
      }
      li:last-child { margin-right: 0; }
      // hide the second stat (raw evictions) when there is a selected choropleth
      li:nth-child(2) { display:none; }
      // show the second stat if there is no selected choropleth
      li:nth-child(2):last-child { display: block; }
      // On smaller screens, float the latter of two displayed stats to the right
      li:nth-child(2):last-child, li:nth-child(3) { float: right; }
    }
  }
}

// display all three data attributes in card when space permits
@media(min-width: 540px) {
  :host-context(.map-ui-wrapper) {
    .location-card {
      .card-content { 
        li { max-width: 40%; }
        li:nth-child(2) { display: block; }
        li:nth-child(2):last-child, li:nth-child(3) { float: left; }
      }
    }
  }
}
// split cards across viewport on devices larger than mobile 
@media(min-width: $gtMobile) {
  :host-context(.map-ui-wrapper) {
    .location-card { 
      width: 100%; 
      min-width: grid(35); 
      .card-content li { 
        max-width: 30%;
      }
    }
  }
} 
// tablet and larger displays:
@media(min-width: $gtTablet) {
  :host-context(.map-ui-wrapper) {
    box-shadow:none;
    // drop card width
    .location-card {
      width: $cardWidth;
      min-width: $cardWidth;
      // align header text at the bottom of the header
      .card-header {
        justify-content: flex-end; 
      }
      // increase font sizes
      .card-heading { 
        @include cardHeading($cardHeadingSize);
      }
      .card-subheading {
        margin: grid(1) 0 0 0;     
        @include smallCapsText($cardSubheadingSize);
      }
      // stacked statistics
      .card-content {
        position: static;
        padding: $defaultPadding;
        li {
          max-width: none;
          float: none;
          margin-right: 0;
          &:nth-child(2):last-child,
          &:nth-child(3) { float: none; }
          span {
            overflow: visible;
            white-space: normal;
          }
        }
        .card-stat-label {
          font-size: $cardLabelTextSize;
          // align hint button with text
          .attribute-hint ::ng-deep .hint-button svg {
            margin-top:2px;
          }
        }
        .card-stat-value {
          @include numberFont($cardValueTextSize);
          &.unavailable {
            @include defaultFont($cardValueTextSize);
          }
        }
        // override for eviction rate to place the hint button after text
        li.has-hint .card-stat-label {
          width:auto;
          display: inline-block;
          .attribute-hint {
            width: auto;
            right: 0;
          }
        }
      }
    }
  }
}


// Location cards in the data panel
// ----
//  - switch from box shadows to borders
//  - table-like stat labels and values
//  - switch header style and add marker
//  - first 2 stats have alternate treatment
//  - stat groups
//  - additional "card" for addign a location
:host-context(.data-wrapper) {
  margin:0;
  overflow:auto;
  padding:0px grid(4) grid(5);
  .location-card {
    min-width: grid(32);
    width: 100%;
    box-shadow:none;
    margin-right: grid(2);
    &:last-child { margin-right: 0; }
    .card-stat-comparison { color: $grey1a; }
    .card-stat-comparison.bad { color: $red; }

    // marker icon
    .card-header .marker { 
        display:block; 
        width: 28px; 
        height: 40px;
        position:absolute;
        top:12px;
        bottom:0;
        left:0;
        margin:auto;
    }
    .card-heading { 
      @include panelCardHeading($panelCardHeadingSize);
      margin-left: grid(4);
    }
    .card-subheading { 
      font-size: $panelCardSubheadingSize;
      margin-left: grid(4);
      margin-bottom: grid(1);
    }
    .card-content { 
      position:relative; 
      border: 1px solid $panelCardBorder;
      padding:0;
    }
    .card-dismiss {
      top: auto;
      bottom: grid(5);
    }
    .card-stats { padding-top: grid(14); }
    .card-stats li {
      .card-stat-value { 
        color: $panelCardValueText;
        &.unavailable {
          color: $grey3;
        }
      }
      .card-stat-label { color: $panelCardLabelText; }
      // first two stats have a more prominent layout
      &:nth-child(1), &:nth-child(2) {
        position:absolute;
        width:50%;
        top:0;
        left:0;
        height: grid(14);
        border-bottom:1px solid $panelCardBorder;
        text-align:center;
        display:flex;
        flex-direction: column-reverse;
        justify-content: center;
        align-items: center;
        .card-stat-label {
          @include defaultFontBold($panelCardLabelTextLg);
          text-transform: uppercase;
          letter-spacing:0.5px;
        }
        // drop the hint icon to save space, but still show a hint if they hover
        &.has-hint .card-stat-label { 
          padding-right: 0;
          .attribute-hint ::ng-deep .hint-button svg { display: none; }
        }
        .card-stat-value {
          @include numberFont($panelCardLabelValueLg);
          &.unavailable {
            @include defaultFont($panelCardLabelValueLg);
          }
        }
        .card-stat-comparison {
          font-size: 13px;
          display: block;
          position: absolute;
          bottom: grid(1.5);
          right: 0;
          left: 0;
        }
      }
      &:nth-child(2) {
        right:0;
        left:auto;
        border-left: 1px solid $panelCardBorder;
      }
      // all other stats
      &:nth-child(n+3) {
        text-align:left;
        padding: grid(1) $defaultPadding;
        margin-bottom:0;
        display: flex;
        align-items: stretch;
        justify-content: space-between;
        &:nth-child(odd) { 
          background: $secondaryBackground;
        }
        .card-stat-label { 
          width: 60%;
          font-size: $panelCardStatTextSize;
        }
        .card-stat-value {
          width: 33.333%;
          text-align:left;
          font-size: $panelCardStatTextSize;
        }
      }
      &.divider {
        background: $defaultBackground!important; // divider is always the same color
        padding: grid(3) 0 grid(2) 0;
        @include smallCapsText(12px);
        .card-stat-label { 
          width:100%; 
          color: $grey2; 
          text-align:center; 
        }
      }
    }
    &.location-add {
      position:relative;
      .card-header { border-bottom-color: $secondaryBackground; }
      .card-content {
        border:none;
        position:absolute;
        top: $cardHeaderHeight;
        bottom:0;
        left:0;
        right:0;
        width:100%;
        padding: $defaultPadding*2;
        background: $secondaryBackground;
        display:flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        p {
          @include defaultFontBold($cardAddLocationTextSize);
          margin: $defaultPadding 0;
        }
      }
      app-location-search { width: 100%;}
    } 
  }
}

// Larger than tablet in data panel
// ----
//  - Boost font sizes
//  - Adjust margins / padding
//  - No horizontal overflow on wrapper
@media(min-width: $gtTablet) {
  :host-context(.data-wrapper) {
    overflow:none;
    max-width: $maxContentWidth;
    margin: auto;
    padding: 0 $pageMarginLg grid(6);
    .location-card {
      margin-right: grid(4);
      min-width: grid(39);
      flex:1;
      &:last-child { margin-right: 0; }
      .card-header .marker {
        top:0;
        width: 40px; 
        height: 58px;
      }
      .card-heading { 
        font-size: 26px; 
        margin-left: grid(6);
      }
      .card-subheading { 
        margin-left: grid(6); 
      }
      .card-dismiss {
        bottom: grid(4.5);
      }
      .card-stats { 
        padding-top: grid(15); 
        li:nth-child(1),
        li:nth-child(2) {
          height: grid(15);
          .card-stat-label { font-size: $panelCardLabelTextLg_t; }
          .card-stat-value { font-size: $panelCardLabelValueLg_t; }
        }
        li:nth-child(n+3) { 
          padding: grid(1.5) $defaultPadding; 
          .card-stat-label,
          .card-stat-value { font-size: $panelCardStatTextSize_t; }
        }
        li.divider .card-stat-label {
          font-size:14px;
        }
      }
      &.location-add .card-content p {
        font-size: $cardAddLocationTextSize_t;
      }
    }
  }
}
